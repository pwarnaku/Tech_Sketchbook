{"ast":null,"code":"import _slicedToArray from \"/Users/piumi/Desktop/Paint-master/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/piumi/Desktop/Paint-master/src/components/Paint.js\";\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport Name from './Name';\nimport Canvas from './Canvas';\nimport ColorPicker from './ColorPicker';\nimport RefreshButton from './RefreshButton';\nimport useWindowSize from './WindowSize';\nimport randomColor from 'randomcolor';\nexport default function Paint() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeColor = _useState4[0],\n        setActiveColor = _useState4[1];\n\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`).then(res => res.json()).then(res => {\n      setColors(res.colors.map(color => color.hex.value));\n      setActiveColor(res.colors[0].hex.value);\n    });\n  }, []);\n  useEffect(getColors, []);\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        visible = _useState6[0],\n        setVisible = _useState6[1];\n\n  let timeoutId = useRef();\n\n  const _useWindowSize = useWindowSize(() => {\n    setVisible(true);\n    clearTimeout(timeoutId.current);\n    timeoutId.current = setTimeout(() => setVisible(false), 500);\n  }),\n        _useWindowSize2 = _slicedToArray(_useWindowSize, 2),\n        windowWidth = _useWindowSize2[0],\n        windowHeight = _useWindowSize2[1];\n\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      borderTop: `10px solid ${activeColor}`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ColorPicker, {\n    colors: colors,\n    activeColor: activeColor,\n    setActiveColor: setActiveColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(RefreshButton, {\n    cb: getColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }))), activeColor && React.createElement(Canvas, {\n    color: activeColor,\n    height: window.innerHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: `window-size ${visible ? '' : 'hidden'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, windowWidth, \" x \", windowHeight));\n}","map":{"version":3,"sources":["/Users/piumi/Desktop/Paint-master/src/components/Paint.js"],"names":["React","useState","useEffect","useCallback","useRef","Name","Canvas","ColorPicker","RefreshButton","useWindowSize","randomColor","Paint","colors","setColors","activeColor","setActiveColor","getColors","baseColor","slice","fetch","then","res","json","map","color","hex","value","visible","setVisible","timeoutId","clearTimeout","current","setTimeout","windowWidth","windowHeight","borderTop","marginTop","window","innerHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport Name from './Name'\nimport Canvas from './Canvas'\nimport ColorPicker from './ColorPicker'\nimport RefreshButton from './RefreshButton'\nimport useWindowSize from './WindowSize'\nimport randomColor from 'randomcolor'\n\nexport default function Paint() {\n  const [colors, setColors] = useState([])\n  const [activeColor, setActiveColor] = useState(null)\n  const getColors = useCallback(() => {\n    const baseColor = randomColor().slice(1);\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=monochrome`)\n    .then(res => res.json())\n    .then(res => {\n      setColors(res.colors.map(color => color.hex.value))\n      setActiveColor(res.colors[0].hex.value)\n    })\n  }, [])\n  useEffect(getColors, [])\n  \n  const [visible, setVisible] = useState(false)\n  let timeoutId = useRef()\n  const [windowWidth, windowHeight] = useWindowSize(() => {\n    setVisible(true)\n    clearTimeout(timeoutId.current)\n    timeoutId.current = setTimeout(() => setVisible(false), 500)\n  })\n  \n  return (\n    <div className=\"app\">\n      <header style={{ borderTop: `10px solid ${activeColor}` }}>\n        <div>\n          <Name />\n        </div>\n        <div style={{ marginTop: 10 }}>\n          <ColorPicker\n            colors={colors}\n            activeColor={activeColor}\n            setActiveColor={setActiveColor}\n          />\n          <RefreshButton cb={getColors} />\n        </div>\n      </header>\n      {activeColor && (\n        <Canvas\n          color={activeColor}\n          height={window.innerHeight}\n        />\n      )}\n      <div className={`window-size ${visible ? '' : 'hidden'}`}>\n        {windowWidth} x {windowHeight}\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}