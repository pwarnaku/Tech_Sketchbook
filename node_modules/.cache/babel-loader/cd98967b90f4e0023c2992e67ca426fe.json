{"ast":null,"code":"import _slicedToArray from \"/Users/piumi/Desktop/sketchbook/Tech_Sketchbook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nexport default function useWindowSize(cb) {\n  const _useState = useState([window.innerWidth, window.innerHeight]),\n        _useState2 = _slicedToArray(_useState, 2),\n        _useState2$ = _slicedToArray(_useState2[0], 2),\n        windowWidth = _useState2$[0],\n        windowHeight = _useState2$[1],\n        setWindowSize = _useState2[1];\n\n  useEffect(() => {\n    const handleResize = () => {\n      cb();\n      setWindowSize([window.innerWidth, window.innerHeight]);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return [windowWidth, windowHeight];\n}","map":{"version":3,"sources":["/Users/piumi/Desktop/sketchbook/Tech_Sketchbook/src/components/WindowSize.js"],"names":["React","useState","useEffect","useWindowSize","cb","window","innerWidth","innerHeight","windowWidth","windowHeight","setWindowSize","handleResize","addEventListener","removeEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,eAAe,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AAAA,oBACaH,QAAQ,CAAC,CAACI,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CADrB;AAAA;AAAA;AAAA,QAChCC,WADgC;AAAA,QACnBC,YADmB;AAAA,QACJC,aADI;;AAGxCR,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMS,YAAY,GAAG,MAAM;AACzBP,MAAAA,EAAE;AACFM,MAAAA,aAAa,CAAC,CAACL,MAAM,CAACC,UAAR,EAAoBD,MAAM,CAACE,WAA3B,CAAD,CAAb;AACD,KAHD;;AAIAF,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCD,YAAlC;AACA,WAAO,MAAMN,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCF,YAArC,CAAb;AACD,GARQ,EAQN,EARM,CAAT;AASA,SAAO,CAACH,WAAD,EAAcC,YAAd,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nexport default function useWindowSize(cb) {\n  const [[windowWidth, windowHeight], setWindowSize] = useState([window.innerWidth, window.innerHeight])\n  \n  useEffect(() => {\n\n    const handleResize = () => {\n      cb()\n      setWindowSize([window.innerWidth, window.innerHeight])\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n  return [windowWidth, windowHeight]\n}"]},"metadata":{},"sourceType":"module"}