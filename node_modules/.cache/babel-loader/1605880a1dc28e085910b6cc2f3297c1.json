{"ast":null,"code":"import _slicedToArray from \"/Users/piumi/Desktop/sketchbook/Tech_Sketchbook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/piumi/Desktop/sketchbook/Tech_Sketchbook/src/components/Paint.js\";\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport Name from './Name';\nimport randomColor from 'randomcolor';\nimport Canvas from './Canvas';\nimport useWindowSize from './WindowSize';\nimport ColorPicker from './ColorPicker';\nimport RefreshButton from './RefreshButton';\nexport default function Paint() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        colors = _useState2[0],\n        setColors = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        activeColor = _useState4[0],\n        setActiveColor = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        visible = _useState6[0],\n        setVisible = _useState6[1];\n\n  let timeoutId = useRef();\n\n  const _useWindowSize = useWindowSize(() => {\n    setVisible(true);\n    clearTimeout(timeoutId.current);\n    timeoutId.current = setTimeout(() => setVisible(false), 500);\n  }),\n        _useWindowSize2 = _slicedToArray(_useWindowSize, 2),\n        windowWidth = _useWindowSize2[0],\n        windowHeight = _useWindowSize2[1];\n\n  const headerRef = useRef({\n    offsetHeight: 0\n  });\n  const getColors = useCallback(() => {\n    // get the random colors in array but copying and choose the first on in the origianl array by slice(1) function\n    const baseColor = randomColor().slice(1); // chose that one color and scheme mode quad is generating different colors based on it\n\n    fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=quad`).then(res => res.json()).then(res => {\n      setColors(res.colors.map(color => color.hex.value));\n      setActiveColor(res.colors[0].hex.value);\n    });\n  });\n  useEffect(getColors, []);\n  return React.createElement(\"div\", {\n    className: \"app\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    ref: headerRef,\n    style: {\n      borderTop: `10px solid ${activeColor}`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Name, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(ColorPicker, {\n    colors: colors,\n    activeColor: activeColor,\n    setActiveColor: setActiveColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(RefreshButton, {\n    cb: getColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }))), activeColor && React.createElement(Canvas, {\n    color: activeColor,\n    height: window.innerHeight - headerRef.current.offsetHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: `window-size ${visible ? '' : 'hidden'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, windowWidth, \" x \", windowHeight));\n}","map":{"version":3,"sources":["/Users/piumi/Desktop/sketchbook/Tech_Sketchbook/src/components/Paint.js"],"names":["React","useState","useEffect","useRef","useCallback","Name","randomColor","Canvas","useWindowSize","ColorPicker","RefreshButton","Paint","colors","setColors","activeColor","setActiveColor","visible","setVisible","timeoutId","clearTimeout","current","setTimeout","windowWidth","windowHeight","headerRef","offsetHeight","getColors","baseColor","slice","fetch","then","res","json","map","color","hex","value","borderTop","marginTop","window","innerHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport Name from './Name'\nimport randomColor from 'randomcolor'\nimport Canvas from './Canvas'\nimport useWindowSize from './WindowSize'\nimport ColorPicker from './ColorPicker'\nimport RefreshButton from './RefreshButton'\n\nexport default function Paint() {\n    const [colors, setColors] = useState([])\n    const [activeColor, setActiveColor] = useState(null)\n    const [visible, setVisible] = useState(false)\n    let timeoutId = useRef()\n    const [windowWidth, windowHeight] = useWindowSize(() => {\n        setVisible(true)\n        clearTimeout(timeoutId.current)\n        timeoutId.current = setTimeout(() => setVisible(false), 500)\n    })\n    const headerRef = useRef({offsetHeight: 0})\n    const getColors = useCallback(() => {\n        // get the random colors in array but copying and choose the first on in the origianl array by slice(1) function\n        const baseColor = randomColor().slice(1);\n        // chose that one color and scheme mode quad is generating different colors based on it\n        fetch(`https://www.thecolorapi.com/scheme?hex=${baseColor}&mode=quad`)\n        .then(res => res.json())\n        .then(res => {\n            setColors(res.colors.map(color => color.hex.value))\n            setActiveColor(res.colors[0].hex.value)\n        })\n    })\n    \n    useEffect(getColors, [])\n    return (\n        <div className=\"app\">\n            <header ref={headerRef} style={{ borderTop: `10px solid ${activeColor}`}}>\n                <div>\n                    <Name />\n                </div>\n                <div style={{ marginTop: 10}}>\n                    <ColorPicker \n                        colors={colors}\n                        activeColor={activeColor}\n                        setActiveColor={setActiveColor}\n                    />\n                    <RefreshButton cb={getColors}/>\n                </div>\n            </header>\n            {activeColor && (\n                  <Canvas\n                    color={activeColor}\n                    height={window.innerHeight - headerRef.current.offsetHeight}\n                  />\n                )}\n                <div className={`window-size ${visible ? '' : 'hidden'}`}>\n                   {windowWidth} x {windowHeight}\n                 </div>\n        </div>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}